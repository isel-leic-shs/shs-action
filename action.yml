name: 'SHS Analyser GitHub Action'
description: |
  GitHub Action that handles security scans using dependency-check and publish output to SHS service

runs:
  using: "composite"
  steps:
    - name: Install Dependency-Check CLI
      shell: bash
      run: |
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.1.0/dependency-check-9.1.0-release.zip 
        unzip dependency-check-9.1.0-release.zip 
        rm dependency-check-9.1.0-release.zip 
        chmod +x dependency-check/bin/dependency-check.sh 

    - name: Get the driver for the database
      shell: bash
      run: |
        wget https://jdbc.postgresql.org/download/postgresql-42.6.0.jar -P driver

    - name: make dir for reports
      shell: bash
      run: mkdir reports

    - name: test dependency-check
      shell: bash
      run: |
        ./dependency-check/bin/dependency-check.sh --scan . --format HTML --format JSON -out reports --dbDriverName "org.postgresql.Driver" --connectionString "jdbc:postgresql://5.tcp.eu.ngrok.io:11002/dependencycheck?currentSchema=public" --dbUser "dcclient" --dbPassword "dev02" --dbDriverPath "./driver/postgresql-42.6.0.jar" -n

    - name: make dir for json and manifest
      shell: bash
      run: mkdir my-files

    - name: Send the .json report file to send folder
      shell: bash
      run: |
        mv reports/dependency-check-report.json my-files/dependency-check-report.json

    - name: Create a simple manifest file
      shell: bash
      run: |
        echo '{
          "repository_name": "${{ github.event.repository.name }}",
          "repository_id": "${{ github.repository.id }}",
          "repository_owner": "${{ github.repository.owner.login }}",
          "repository_owner_id": "${{ github.repository.owner.id }}",
          "repository_tag_name": "${{ github.ref_name }}"
        }' > my-files/repository_info.json

    - name: Zip files to send to SHS API
      shell: bash
      run: zip -r my-files.zip my-files

#    - name: Send ZIP to Endpoint
#      shell: bash
#      run: |
#        ENDPOINT_URL="https://shs-uny0.onrender.com/zip"
#        curl -X POST -H "Content-Type: application/zip" --data-binary "@my-files/my-files.zip" "$ENDPOINT_URL"

outputs:
  repository_info:
    description: "Information of the repository"
    value: "my-files/repository_info.json"

  report_html:
    description: "Path to the HTML report file"
    value: "reports/dependency-check-report.html"
